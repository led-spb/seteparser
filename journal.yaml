- name: journal
  enabled: true
  output: !include telegram.yaml
  parser:
    type:  simple
    url:   https://petersburgedu.ru/user/auth/login/
    title:
    student: !secret journal_student
    subjects: !secret journal_subjects
    data:
      Login: !secret journal_login
      Password: !secret journal_password
      doLogin: 1
      authsubmit: Войти
    headers:
      Referer: https://petersburgedu.ru/
      X-Requested-With: XMLHttpRequest
      Origin: https://petersburgedu.ru
      DNT: "1"
    eval: |
      import re
      def parse_subj(student_id, subject_id):
          request = self.make_request( "https://petersburgedu.ru/dnevnik/subject/statistic/student/%s/subject/%s" % (student_id,subject_id) )
          tree    = self.etree( request.text )
          subject = tree.cssselect(".subject h1").pop(0).text_content().strip()

          #print "\n"+subject
          rows = tree.cssselect(".subject-stat tbody tr")
          while len(rows)>0:
              row = rows.pop(0)
              td = row.cssselect("td")

              date  = td.pop(0).text_content().strip()
              title = td.pop(0).text_content().strip()
              title = re.sub(u"Замена:.*$",'',title, flags=re.U+re.M+re.S)
              task  = td.pop(0).text_content().strip()
              grade = td.pop(0).text_content().strip()

              body = u"<b>%s</b>\n<b>Тема:</b> %s\n<b>ДЗ:</b> %s\n<b>Отметка:</b> %s" % (date,title,task,grade)
              body = re.sub("\n\s+",'\n',body)
              #print body
              self.add( id= "%s_%s_%s" % (date,student_id,subject_id), title=subject, body=body, lifetime=4*24*60*60 )

      for subj in self.params['subjects']:
           parse_subj( self.params['student'], subj )

